//you are required to set the DB_URL=databaseurlhere, POLKA_KEY=hexkey, SECRETWORD=yourrandomgeneratedkeyhere, and PLATFORM="dev"
// within a .env file before testing any of these functions 

//create a user

POST http://localhost:8080/api/users

{
  "email": "test@mail.com",
  "password": "jibberjabber"
}


###

//upgrade to chirpy red authorization 
POST http://localhost:8080/api/polka/webhooks

{
  "event": "user.upgraded",
  "data": {
    "user_id": "944d38d6-e68d-4da7-851a-fac3d6ee959b"
  }
}


###

//create a chirp - following Bearer, JWT access token required ( copy from login output ) 
POST http://localhost:8080/api/chirps	
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiY2xhaW0iLCJpc3MiOiJjaGlycHkiLCJzdWIiOiI3OWI5OTIzMS1jNWQ1LTRmZTgtOWQ3MC03ZjIwNzNjNzExYjMiLCJleHAiOjE3NTU4MjU3OTksImlhdCI6MTc1NTgyMjE5OX0.LKOTVG51vqtrxWACYMnA2uV63Pl5nAK8KUdWMDlBn3g
Content-Type: application/json

{
  "body": "this is a test chirp",
  "user_id": "4eb853a7-eea0-4131-a34a-990a908d8e32"
}

###

// login user before creating chirp - JWT access token and Hex Refresh token provided in output - need to set 'SECRETWORD=randomgeneratednumberhere' in .env
POST http://localhost:8080/api/login

{
  "email": "test@mail.com",
  "password": "jibberjabber"
}



###

//get all chirps currently stored in database - optionally add /?sort=asc or /?sort=desc within URL to change order of output
GET http://localhost:8080/api/chirps  

###

//get all chirps from logged in user - requires user id set to ' auther_id ' in URL query
GET http://localhost:8080/api/chirps/?author_id=4eb853a7-eea0-4131-a34a-990a908d8e32

###

//delete a chirp - requires login - chip ID required within URL 
DELETE http://localhost:8080/api/chirps/c3b00194-1d8b-4c5d-959a-36f504db5460
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiY2xhaW0iLCJpc3MiOiJjaGlycHkiLCJzdWIiOiI3OWI5OTIzMS1jNWQ1LTRmZTgtOWQ3MC03ZjIwNzNjNzExYjMiLCJleHAiOjE3NTU4MjU3OTksImlhdCI6MTc1NTgyMjE5OX0.LKOTVG51vqtrxWACYMnA2uV63Pl5nAK8KUdWMDlBn3g
Content-Type: application/json

{
  "key":"value"
}

###

//refresh access token - requires refresh code after "Bearer" within header - provided at login 
POST http://localhost:8080/api/refresh
Authorization: Bearer 3d553ae0266275d081edf788a730159a27a1397f8bc888f838034ecb5aa673dc
Content-Type: application/json

{
  "key":"value"
}


###

//revokes access token - requires refresh code after "Bearer" within header - provided at login 
POST http://localhost:8080/api/revoke
Authorization: Bearer 3d553ae0266275d081edf788a730159a27a1397f8bc888f838034ecb5aa673dc
Content-Type: application/json

{
  "key":"value"
}

###


//resets all users and databases - requires ' PLATFORM="dev" ' to be set within .env file 
POST http://localhost:8080/admin/reset





